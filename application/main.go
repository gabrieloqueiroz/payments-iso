package main

import (
	"fmt"
	"iso8583/service"
	"iso8583/util"
)

func main() {
	createCommand(util.ConstantsUtilsInst.REQUEST_PRE_AUTHORIZATION())
	// convertCommandToMsg("0200F23C4601A8E19618000000000000010416541333008902001100300000000000100004101809270091941509270410041015200510030601455306014553335413330089020011D2512601079360805000000088900GT000131012005532486001ENTREPA*Homologa  o E  SAO PAULO     BRA065 6105000017601U1401C??o E012014MTIP32 MCD 15A01301440402244000115986D002E27D002E27270250010120000000022000020011408FF20c
}

func convertCommandToMsg(command string) {
	parser := service.NewParser()
	parsedMsg, err := parser.Parse(command)
	if err != nil {
		fmt.Printf("Error parsing ISO8583 message: %v \n", err)
		return
	}

	parsedMsg.LogFields()
}

func createCommand(mti string) {
	commandbuilder := &service.MessageService{MethodType: mti}
	commandbuilder.CreateMsg()
}
